<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Spring MVC 的配置文件 包含网站所有的跳转控制逻辑 -->
	<!-- 1 扫描所有的业务逻辑组件,只要扫描控制器组件就好 -->
	<context:component-scan base-package="com.liufeng" use-default-filters="false">
		<!-- 扫描有控制器标签的 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>

	</context:component-scan>



	<!--&lt;!&ndash; 配置视图解析器 html方便页面放回 &ndash;&gt;-->
	<bean id="freemakerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ligerView/"/>
		<!-- FreeMarker默认每隔5秒检查模板是否被更新，如果已经更新了，就会重新加载并分析模板。 但经常检查模板是否更新可能比较耗时。如果你的应用运行在生产模式下，而且你预期模板不会经常更新，
           则可以将更新的延迟时间延长至一个小时或者更久。 可以通过为freemarkerSettings属性设置template_update_delay达到这一目的 -->
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">3600</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="output_encoding">UTF-8</prop>
			</props>
		</property>
	</bean>
	<bean id="htmlviewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".html" />
		<property name="order" value="0"/>
		<property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>



	<!--<mvc:resources mapping="/ligerView/*.html" location="ligerView"/>-->
	<!-- 配置视图解析器 jsp方便页面放回 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order" value="1"/>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.liufeng.npc.Interceptor.AccessStatisticsIntceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 两个标准 -->
	<!-- 讲springMVC 不能处理的请求交给tomcat -->
	<mvc:default-servlet-handler/>
	<!-- 能支持springMVC 更高级一些的功能。 JSR303校验 快捷ajax 映射动态请求 -->
	<mvc:annotation-driven/>

</beans>
